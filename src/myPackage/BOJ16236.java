package myPackage;
/*
 * 아기 상어
 * N x N(2<=N<=20) 공간에 물고기 M마리 아기상어 1마리, 한칸에는 물고기가 최대 한마리
 * 0: 빈 칸, 1,2,3,4,5,6: 칸에 있는 물고기 크기, 9: 아기상어 위치
 * 아기 상어의 처음 크기 2, 1초에 상하좌우로 인접한 한칸씩 이동가능
 * 아기상어 >= 물고기 지나가기 가능, 아기상어 > 물고기 먹기 가능
 * 더 이상 먹을 수 있는 물고기가 공간에 없다면 아기 상어는 엄마 상어에게 도움을 요청한다.
 * 먹을 수 있는 물고기가 1마리라면, 그 물고기를 먹으러 간다.
 * 먹을 수 있는 물고기가 1마리보다 많다면, 거리가 가장 가까운 물고기를 먹으러 간다.
    - 거리는 아기 상어가 있는 칸에서 물고기가 있는 칸으로 이동할 때, 지나야하는 칸의 개수의 최소값이다.
    - 거리가 가까운 물고기가 많다면, 가장 위에 있는 물고기, 그러한 물고기가 여러마리라면, 가장 왼쪽에 있는 물고기를 먹는다.
 * 아기상어는 자신의 크기와 같은수의 물고기를 먹을 때 마다 크기가 1증가
 * 아기 상어가 엄마 상어에게 도움을 요청하기까지 걸리는 시간 출력.
 */
public class BOJ16236 {
	public static void main(String[] args) throws Exception {
		
	}
}
